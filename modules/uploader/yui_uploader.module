<?php

/**
 * @file
 * A Drupal wrapper for the Yahoo YUI Uploader Widget
 */

/**
 * Implements hook_menu().
 */
function yui_uploader_menu() {
  return array(
    'yui/uploader' => array(
      'file' => 'includes/upload.inc',
      'page callback' => 'yui_uploader_upload_file',
      'page arguments' => array(2),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
    ),
  );
}

/**
 * Implements hook_element_info().
 */
function yui_uploader_element_info() {
  return array(
    'yui_uploader' => array(
      '#input' => TRUE,
      '#pre_render' => array('yui_uploader_form_element_pre_render'),
      '#process' => array('yui_uploader_form_element_process'),
      '#width' => '100px',
      '#height' => '40px',
      '#extensions' => array('*'),
      '#multiple_files' => TRUE,
      '#theme' => 'yui_uploader',
      '#theme_wrappers' => array('form_element'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function yui_uploader_theme() {
  return array(
    'yui_uploader' => array(
      'render element' => 'element',
      'template' => 'theme/yui-uploader',
      'file' => 'theme/theme.inc',
    ),
  );
}

/**
 * Implements hook_process().
 */
function yui_uploader_form_element_process(array $element, array &$form_state, array $complete_form = NULL) {
  $element['#form_id'] = $complete_form['form_id']['#value'];
  $element['#form_build_id'] = $complete_form['form_build_id']['#value'];
  $element['#form_token'] = $complete_form['form_token']['#default_value'];
  $element['#upload_required'] = $element['#required'];
  $element['#required'] = FALSE;
  $element['#cache'] = TRUE;
  $element['#files'] = yui_uploader_get_uploaded_files($form_state);
  $form_state['storage']['yui_uploader'] = isset($form_state['storage']['yui_uploader']) ? $form_state['storage']['yui_uploader'] : array();
  return $element;
}

/**
 * Implements hook_pre_render().
 */
function yui_uploader_form_element_pre_render(array $element) {
  global $base_url;
  module_load_include('inc', 'yui', 'includes/utilities');
  $add_prefix = create_function('$a', 'return "*.$a";');
  $file_filters_extensions = array_map($add_prefix, $element['#extensions']);
  $file_filters_extensions = implode(';', $file_filters_extensions);
  $id = $element['#id'];
  $data = array(
    'yui' => array(
      'uploader' => array(
        "$id" => array(
          'id' => $id,
          'formID' => str_replace(array('][', '_', ' '), '-', $element['#form_id']),
          // Prevent form submission until one or more files have been uploaded.
          'required' => $element['#upload_required'],
          'submittable' => $element['#upload_required'] ? FALSE : TRUE,
          'files' => $element['#files'],
          'extensions' => $element['#extensions'],
          'config' => array(
            'selectButtonLabel' => t('Upload Files'),
            'width' => $element['#width'],
            'height' => $element['#height'],
            'fileFilters' => array(
              array(
                'description' => 'Files',
                'extensions' => $file_filters_extensions,
              ),
            ),
            'multipleFiles' => $element['#multiple_files'],
            'swfURL' => $base_url . '/' . yui_get_assets_file_path('uploader') . '/flashuploader.swf?t=' . rand(),
            'uploadURL' => url('yui/uploader'),
            'simLimit' => 5,
            'dragAndDropArea' => "#{$id}",
            'fileFieldName' => 'files',
            'postVarsPerFile' => array(
              'SID' => session_id(),
              'SNAME' => session_name(),
              'form_build_id' => $element['#form_build_id'],
              'form_id' => $element['#form_id'],
              'form_token' => $element['#form_token'],
            ),
          ),
        ),
      ),
    ),
  );
  yui_add_seed();
  drupal_add_js($data, 'setting');
  drupal_add_js(drupal_get_path('module', 'yui_uploader') . '/js/yui-drupal-uploader.js');
  drupal_add_css(drupal_get_path('module', 'yui_uploader') . '/css/yui-uploader-progress-bar.css');
  return $element;
}

/**
 * Returns an array of the uploaded files as Drupal file objects.
 */
function yui_uploader_get_uploaded_files(array &$form_state) {
  if (isset($form_state['storage']['yui_uploader'])) {
    return $form_state['storage']['yui_uploader'];
  }
  return array();
}
